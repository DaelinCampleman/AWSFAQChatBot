{"ast":null,"code":"import { __assign, __awaiter, __generator, __read } from \"tslib\";\nimport { HttpRequest as __HttpRequest } from \"@aws-sdk/protocol-http\";\nimport { decorateServiceException as __decorateServiceException, expectInt32 as __expectInt32, expectNonNull as __expectNonNull, expectObject as __expectObject, expectString as __expectString, extendedEncodeURIComponent as __extendedEncodeURIComponent, limitedParseDouble as __limitedParseDouble } from \"@aws-sdk/smithy-client\";\nimport { LexRuntimeV2ServiceException as __BaseException } from \"../models/LexRuntimeV2ServiceException\";\nimport { AccessDeniedException, BadGatewayException, ConflictException, DependencyFailedException, InternalServerException, ResourceNotFoundException, StartConversationRequestEventStream, ThrottlingException, ValidationException } from \"../models/models_0\";\nexport var serializeAws_restJson1DeleteSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"DELETE\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1GetSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {};\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"GET\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1PutSessionCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({\n            \"content-type\": \"application/json\"\n          }, isSerializableHeaderValue(input.responseContentType) && {\n            responsecontenttype: input.responseContentType\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign({}, input.messages !== undefined && input.messages !== null && {\n            messages: serializeAws_restJson1Messages(input.messages, context)\n          }), input.requestAttributes !== undefined && input.requestAttributes !== null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionState !== undefined && input.sessionState !== null && {\n            sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RecognizeTextCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = {\n            \"content-type\": \"application/json\"\n          };\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/text\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          body = JSON.stringify(__assign(__assign(__assign({}, input.requestAttributes !== undefined && input.requestAttributes !== null && {\n            requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n          }), input.sessionState !== undefined && input.sessionState !== null && {\n            sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n          }), input.text !== undefined && input.text !== null && {\n            text: input.text\n          }));\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1RecognizeUtteranceCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign(__assign(__assign(__assign({\n            \"content-type\": \"application/octet-stream\",\n            \"x-amz-content-sha256\": \"UNSIGNED-PAYLOAD\"\n          }, isSerializableHeaderValue(input.sessionState) && {\n            \"x-amz-lex-session-state\": input.sessionState\n          }), isSerializableHeaderValue(input.requestAttributes) && {\n            \"x-amz-lex-request-attributes\": input.requestAttributes\n          }), isSerializableHeaderValue(input.requestContentType) && {\n            \"content-type\": input.requestContentType\n          }), isSerializableHeaderValue(input.responseContentType) && {\n            \"response-content-type\": input.responseContentType\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/utterance\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          if (input.inputStream !== undefined) {\n            body = input.inputStream;\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var serializeAws_restJson1StartConversationCommand = function (input, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, hostname, _b, protocol, port, basePath, headers, resolvedPath, labelValue, labelValue, labelValue, labelValue, body;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          return [4, context.endpoint()];\n\n        case 1:\n          _a = _c.sent(), hostname = _a.hostname, _b = _a.protocol, protocol = _b === void 0 ? \"https\" : _b, port = _a.port, basePath = _a.path;\n          headers = __assign({}, isSerializableHeaderValue(input.conversationMode) && {\n            \"x-amz-lex-conversation-mode\": input.conversationMode\n          });\n          resolvedPath = \"\".concat((basePath === null || basePath === void 0 ? void 0 : basePath.endsWith(\"/\")) ? basePath.slice(0, -1) : basePath || \"\") + \"/bots/{botId}/botAliases/{botAliasId}/botLocales/{localeId}/sessions/{sessionId}/conversation\";\n\n          if (input.botId !== undefined) {\n            labelValue = input.botId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botId.\");\n          }\n\n          if (input.botAliasId !== undefined) {\n            labelValue = input.botAliasId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: botAliasId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{botAliasId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: botAliasId.\");\n          }\n\n          if (input.localeId !== undefined) {\n            labelValue = input.localeId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: localeId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{localeId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: localeId.\");\n          }\n\n          if (input.sessionId !== undefined) {\n            labelValue = input.sessionId;\n\n            if (labelValue.length <= 0) {\n              throw new Error(\"Empty value provided for input HTTP label: sessionId.\");\n            }\n\n            resolvedPath = resolvedPath.replace(\"{sessionId}\", __extendedEncodeURIComponent(labelValue));\n          } else {\n            throw new Error(\"No value provided for input HTTP label: sessionId.\");\n          }\n\n          if (input.requestEventStream !== undefined) {\n            body = context.eventStreamMarshaller.serialize(input.requestEventStream, function (event) {\n              return serializeAws_restJson1StartConversationRequestEventStream_event(event, context);\n            });\n          }\n\n          return [2, new __HttpRequest({\n            protocol: protocol,\n            hostname: hostname,\n            port: port,\n            method: \"POST\",\n            headers: headers,\n            path: resolvedPath,\n            body: body\n          })];\n      }\n    });\n  });\n};\nexport var deserializeAws_restJson1DeleteSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1DeleteSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            botAliasId: undefined,\n            botId: undefined,\n            localeId: undefined,\n            sessionId: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.botAliasId !== undefined && data.botAliasId !== null) {\n            contents.botAliasId = __expectString(data.botAliasId);\n          }\n\n          if (data.botId !== undefined && data.botId !== null) {\n            contents.botId = __expectString(data.botId);\n          }\n\n          if (data.localeId !== undefined && data.localeId !== null) {\n            contents.localeId = __expectString(data.localeId);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DeleteSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n\n            case \"ConflictException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 4];\n\n            case \"InternalServerException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 6];\n\n            case \"ResourceNotFoundException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 8];\n\n            case \"ThrottlingException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 10];\n\n            case \"ValidationException\":\n              return [3, 12];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 12];\n          }\n\n          return [3, 14];\n\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          throw _d.sent();\n\n        case 14:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1GetSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1GetSessionCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            interpretations: undefined,\n            messages: undefined,\n            sessionId: undefined,\n            sessionState: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.interpretations !== undefined && data.interpretations !== null) {\n            contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n          }\n\n          if (data.messages !== undefined && data.messages !== null) {\n            contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          if (data.sessionState !== undefined && data.sessionState !== null) {\n            contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1GetSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n\n            case \"InternalServerException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 4];\n\n            case \"ResourceNotFoundException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 6];\n\n            case \"ThrottlingException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 8];\n\n            case \"ValidationException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 10];\n          }\n\n          return [3, 12];\n\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1PutSessionCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1PutSessionCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        audioStream: undefined,\n        contentType: undefined,\n        messages: undefined,\n        requestAttributes: undefined,\n        sessionId: undefined,\n        sessionState: undefined\n      };\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-messages\"] !== undefined) {\n        contents.messages = output.headers[\"x-amz-lex-messages\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-state\"] !== undefined) {\n        contents.sessionState = output.headers[\"x-amz-lex-session-state\"];\n      }\n\n      if (output.headers[\"x-amz-lex-request-attributes\"] !== undefined) {\n        contents.requestAttributes = output.headers[\"x-amz-lex-request-attributes\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1PutSessionCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n\n            case \"BadGatewayException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3, 4];\n\n            case \"ConflictException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 6];\n\n            case \"DependencyFailedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3, 8];\n\n            case \"InternalServerException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 10];\n\n            case \"ResourceNotFoundException\":\n              return [3, 12];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 12];\n\n            case \"ThrottlingException\":\n              return [3, 14];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 14];\n\n            case \"ValidationException\":\n              return [3, 16];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 16];\n          }\n\n          return [3, 18];\n\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          throw _d.sent();\n\n        case 14:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          throw _d.sent();\n\n        case 16:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          throw _d.sent();\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1RecognizeTextCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, _a, _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          if (output.statusCode !== 200 && output.statusCode >= 300) {\n            return [2, deserializeAws_restJson1RecognizeTextCommandError(output, context)];\n          }\n\n          contents = {\n            $metadata: deserializeMetadata(output),\n            interpretations: undefined,\n            messages: undefined,\n            requestAttributes: undefined,\n            sessionId: undefined,\n            sessionState: undefined\n          };\n          _a = __expectNonNull;\n          _b = __expectObject;\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.apply(void 0, [_b.apply(void 0, [_c.sent()]), \"body\"]);\n\n          if (data.interpretations !== undefined && data.interpretations !== null) {\n            contents.interpretations = deserializeAws_restJson1Interpretations(data.interpretations, context);\n          }\n\n          if (data.messages !== undefined && data.messages !== null) {\n            contents.messages = deserializeAws_restJson1Messages(data.messages, context);\n          }\n\n          if (data.requestAttributes !== undefined && data.requestAttributes !== null) {\n            contents.requestAttributes = deserializeAws_restJson1StringMap(data.requestAttributes, context);\n          }\n\n          if (data.sessionId !== undefined && data.sessionId !== null) {\n            contents.sessionId = __expectString(data.sessionId);\n          }\n\n          if (data.sessionState !== undefined && data.sessionState !== null) {\n            contents.sessionState = deserializeAws_restJson1SessionState(data.sessionState, context);\n          }\n\n          return [2, Promise.resolve(contents)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1RecognizeTextCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n\n            case \"BadGatewayException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3, 4];\n\n            case \"ConflictException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 6];\n\n            case \"DependencyFailedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3, 8];\n\n            case \"InternalServerException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 10];\n\n            case \"ResourceNotFoundException\":\n              return [3, 12];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 12];\n\n            case \"ThrottlingException\":\n              return [3, 14];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 14];\n\n            case \"ValidationException\":\n              return [3, 16];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 16];\n          }\n\n          return [3, 18];\n\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          throw _d.sent();\n\n        case 14:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          throw _d.sent();\n\n        case 16:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          throw _d.sent();\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1RecognizeUtteranceCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1RecognizeUtteranceCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        audioStream: undefined,\n        contentType: undefined,\n        inputMode: undefined,\n        inputTranscript: undefined,\n        interpretations: undefined,\n        messages: undefined,\n        requestAttributes: undefined,\n        sessionId: undefined,\n        sessionState: undefined\n      };\n\n      if (output.headers[\"x-amz-lex-input-mode\"] !== undefined) {\n        contents.inputMode = output.headers[\"x-amz-lex-input-mode\"];\n      }\n\n      if (output.headers[\"content-type\"] !== undefined) {\n        contents.contentType = output.headers[\"content-type\"];\n      }\n\n      if (output.headers[\"x-amz-lex-messages\"] !== undefined) {\n        contents.messages = output.headers[\"x-amz-lex-messages\"];\n      }\n\n      if (output.headers[\"x-amz-lex-interpretations\"] !== undefined) {\n        contents.interpretations = output.headers[\"x-amz-lex-interpretations\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-state\"] !== undefined) {\n        contents.sessionState = output.headers[\"x-amz-lex-session-state\"];\n      }\n\n      if (output.headers[\"x-amz-lex-request-attributes\"] !== undefined) {\n        contents.requestAttributes = output.headers[\"x-amz-lex-request-attributes\"];\n      }\n\n      if (output.headers[\"x-amz-lex-session-id\"] !== undefined) {\n        contents.sessionId = output.headers[\"x-amz-lex-session-id\"];\n      }\n\n      if (output.headers[\"x-amz-lex-input-transcript\"] !== undefined) {\n        contents.inputTranscript = output.headers[\"x-amz-lex-input-transcript\"];\n      }\n\n      data = output.body;\n      contents.audioStream = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1RecognizeUtteranceCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n\n            case \"BadGatewayException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimev2#BadGatewayException\":\n              return [3, 4];\n\n            case \"ConflictException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimev2#ConflictException\":\n              return [3, 6];\n\n            case \"DependencyFailedException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimev2#DependencyFailedException\":\n              return [3, 8];\n\n            case \"InternalServerException\":\n              return [3, 10];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 10];\n\n            case \"ResourceNotFoundException\":\n              return [3, 12];\n\n            case \"com.amazonaws.lexruntimev2#ResourceNotFoundException\":\n              return [3, 12];\n\n            case \"ThrottlingException\":\n              return [3, 14];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 14];\n\n            case \"ValidationException\":\n              return [3, 16];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 16];\n          }\n\n          return [3, 18];\n\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 11:\n          throw _d.sent();\n\n        case 12:\n          return [4, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n\n        case 13:\n          throw _d.sent();\n\n        case 14:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 15:\n          throw _d.sent();\n\n        case 16:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 17:\n          throw _d.sent();\n\n        case 18:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nexport var deserializeAws_restJson1StartConversationCommand = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      if (output.statusCode !== 200 && output.statusCode >= 300) {\n        return [2, deserializeAws_restJson1StartConversationCommandError(output, context)];\n      }\n\n      contents = {\n        $metadata: deserializeMetadata(output),\n        responseEventStream: undefined\n      };\n      data = context.eventStreamMarshaller.deserialize(output.body, function (event) {\n        return __awaiter(void 0, void 0, void 0, function () {\n          var eventName, eventHeaders, eventMessage, parsedEvent;\n\n          var _a;\n\n          return __generator(this, function (_b) {\n            switch (_b.label) {\n              case 0:\n                eventName = Object.keys(event)[0];\n                eventHeaders = Object.entries(event[eventName].headers).reduce(function (accummulator, curr) {\n                  accummulator[curr[0]] = curr[1].value;\n                  return accummulator;\n                }, {});\n                eventMessage = {\n                  headers: eventHeaders,\n                  body: event[eventName].body\n                };\n                parsedEvent = (_a = {}, _a[eventName] = eventMessage, _a);\n                return [4, deserializeAws_restJson1StartConversationResponseEventStream_event(parsedEvent, context)];\n\n              case 1:\n                return [2, _b.sent()];\n            }\n          });\n        });\n      });\n      contents.responseEventStream = data;\n      return [2, Promise.resolve(contents)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1StartConversationCommandError = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a, response, errorCode, _b, parsedBody;\n\n    var _c;\n\n    return __generator(this, function (_d) {\n      switch (_d.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _c = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_c.body = _d.sent(), _c)]));\n          errorCode = \"UnknownError\";\n          errorCode = loadRestJsonErrorCode(output, parsedOutput.body);\n          _b = errorCode;\n\n          switch (_b) {\n            case \"AccessDeniedException\":\n              return [3, 2];\n\n            case \"com.amazonaws.lexruntimev2#AccessDeniedException\":\n              return [3, 2];\n\n            case \"InternalServerException\":\n              return [3, 4];\n\n            case \"com.amazonaws.lexruntimev2#InternalServerException\":\n              return [3, 4];\n\n            case \"ThrottlingException\":\n              return [3, 6];\n\n            case \"com.amazonaws.lexruntimev2#ThrottlingException\":\n              return [3, 6];\n\n            case \"ValidationException\":\n              return [3, 8];\n\n            case \"com.amazonaws.lexruntimev2#ValidationException\":\n              return [3, 8];\n          }\n\n          return [3, 10];\n\n        case 2:\n          return [4, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n\n        case 3:\n          throw _d.sent();\n\n        case 4:\n          return [4, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n\n        case 5:\n          throw _d.sent();\n\n        case 6:\n          return [4, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n\n        case 7:\n          throw _d.sent();\n\n        case 8:\n          return [4, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n\n        case 9:\n          throw _d.sent();\n\n        case 10:\n          parsedBody = parsedOutput.body;\n          response = new __BaseException({\n            name: parsedBody.code || parsedBody.Code || errorCode,\n            $fault: \"client\",\n            $metadata: deserializeMetadata(output)\n          });\n          throw __decorateServiceException(response, parsedBody);\n      }\n    });\n  });\n};\n\nvar serializeAws_restJson1StartConversationRequestEventStream_event = function (input, context) {\n  return StartConversationRequestEventStream.visit(input, {\n    ConfigurationEvent: function (value) {\n      return serializeAws_restJson1ConfigurationEvent_event(value, context);\n    },\n    AudioInputEvent: function (value) {\n      return serializeAws_restJson1AudioInputEvent_event(value, context);\n    },\n    DTMFInputEvent: function (value) {\n      return serializeAws_restJson1DTMFInputEvent_event(value, context);\n    },\n    TextInputEvent: function (value) {\n      return serializeAws_restJson1TextInputEvent_event(value, context);\n    },\n    PlaybackCompletionEvent: function (value) {\n      return serializeAws_restJson1PlaybackCompletionEvent_event(value, context);\n    },\n    DisconnectionEvent: function (value) {\n      return serializeAws_restJson1DisconnectionEvent_event(value, context);\n    },\n    _: function (value) {\n      return value;\n    }\n  });\n};\n\nvar deserializeAws_restJson1StartConversationResponseEventStream_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k, _l, _m, _o, _p;\n\n    return __generator(this, function (_q) {\n      switch (_q.label) {\n        case 0:\n          if (!(output[\"PlaybackInterruptionEvent\"] !== undefined)) return [3, 2];\n          _a = {};\n          return [4, deserializeAws_restJson1PlaybackInterruptionEvent_event(output[\"PlaybackInterruptionEvent\"], context)];\n\n        case 1:\n          return [2, (_a.PlaybackInterruptionEvent = _q.sent(), _a)];\n\n        case 2:\n          if (!(output[\"TranscriptEvent\"] !== undefined)) return [3, 4];\n          _b = {};\n          return [4, deserializeAws_restJson1TranscriptEvent_event(output[\"TranscriptEvent\"], context)];\n\n        case 3:\n          return [2, (_b.TranscriptEvent = _q.sent(), _b)];\n\n        case 4:\n          if (!(output[\"IntentResultEvent\"] !== undefined)) return [3, 6];\n          _c = {};\n          return [4, deserializeAws_restJson1IntentResultEvent_event(output[\"IntentResultEvent\"], context)];\n\n        case 5:\n          return [2, (_c.IntentResultEvent = _q.sent(), _c)];\n\n        case 6:\n          if (!(output[\"TextResponseEvent\"] !== undefined)) return [3, 8];\n          _d = {};\n          return [4, deserializeAws_restJson1TextResponseEvent_event(output[\"TextResponseEvent\"], context)];\n\n        case 7:\n          return [2, (_d.TextResponseEvent = _q.sent(), _d)];\n\n        case 8:\n          if (!(output[\"AudioResponseEvent\"] !== undefined)) return [3, 10];\n          _e = {};\n          return [4, deserializeAws_restJson1AudioResponseEvent_event(output[\"AudioResponseEvent\"], context)];\n\n        case 9:\n          return [2, (_e.AudioResponseEvent = _q.sent(), _e)];\n\n        case 10:\n          if (!(output[\"HeartbeatEvent\"] !== undefined)) return [3, 12];\n          _f = {};\n          return [4, deserializeAws_restJson1HeartbeatEvent_event(output[\"HeartbeatEvent\"], context)];\n\n        case 11:\n          return [2, (_f.HeartbeatEvent = _q.sent(), _f)];\n\n        case 12:\n          if (!(output[\"AccessDeniedException\"] !== undefined)) return [3, 14];\n          _g = {};\n          return [4, deserializeAws_restJson1AccessDeniedException_event(output[\"AccessDeniedException\"], context)];\n\n        case 13:\n          return [2, (_g.AccessDeniedException = _q.sent(), _g)];\n\n        case 14:\n          if (!(output[\"ResourceNotFoundException\"] !== undefined)) return [3, 16];\n          _h = {};\n          return [4, deserializeAws_restJson1ResourceNotFoundException_event(output[\"ResourceNotFoundException\"], context)];\n\n        case 15:\n          return [2, (_h.ResourceNotFoundException = _q.sent(), _h)];\n\n        case 16:\n          if (!(output[\"ValidationException\"] !== undefined)) return [3, 18];\n          _j = {};\n          return [4, deserializeAws_restJson1ValidationException_event(output[\"ValidationException\"], context)];\n\n        case 17:\n          return [2, (_j.ValidationException = _q.sent(), _j)];\n\n        case 18:\n          if (!(output[\"ThrottlingException\"] !== undefined)) return [3, 20];\n          _k = {};\n          return [4, deserializeAws_restJson1ThrottlingException_event(output[\"ThrottlingException\"], context)];\n\n        case 19:\n          return [2, (_k.ThrottlingException = _q.sent(), _k)];\n\n        case 20:\n          if (!(output[\"InternalServerException\"] !== undefined)) return [3, 22];\n          _l = {};\n          return [4, deserializeAws_restJson1InternalServerException_event(output[\"InternalServerException\"], context)];\n\n        case 21:\n          return [2, (_l.InternalServerException = _q.sent(), _l)];\n\n        case 22:\n          if (!(output[\"ConflictException\"] !== undefined)) return [3, 24];\n          _m = {};\n          return [4, deserializeAws_restJson1ConflictException_event(output[\"ConflictException\"], context)];\n\n        case 23:\n          return [2, (_m.ConflictException = _q.sent(), _m)];\n\n        case 24:\n          if (!(output[\"DependencyFailedException\"] !== undefined)) return [3, 26];\n          _o = {};\n          return [4, deserializeAws_restJson1DependencyFailedException_event(output[\"DependencyFailedException\"], context)];\n\n        case 25:\n          return [2, (_o.DependencyFailedException = _q.sent(), _o)];\n\n        case 26:\n          if (!(output[\"BadGatewayException\"] !== undefined)) return [3, 28];\n          _p = {};\n          return [4, deserializeAws_restJson1BadGatewayException_event(output[\"BadGatewayException\"], context)];\n\n        case 27:\n          return [2, (_p.BadGatewayException = _q.sent(), _p)];\n\n        case 28:\n          return [2, {\n            $unknown: output\n          }];\n      }\n    });\n  });\n};\n\nvar serializeAws_restJson1AudioInputEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"AudioInputEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1AudioInputEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1ConfigurationEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"ConfigurationEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1ConfigurationEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1DisconnectionEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"DisconnectionEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1DisconnectionEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1DTMFInputEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"DTMFInputEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1DTMFInputEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1PlaybackCompletionEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"PlaybackCompletionEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1PlaybackCompletionEvent(input, context);\n  return message;\n};\n\nvar serializeAws_restJson1TextInputEvent_event = function (input, context) {\n  var message = {\n    headers: {\n      \":event-type\": {\n        type: \"string\",\n        value: \"TextInputEvent\"\n      },\n      \":message-type\": {\n        type: \"string\",\n        value: \"event\"\n      }\n    },\n    body: new Uint8Array()\n  };\n  message.body = serializeAws_restJson1TextInputEvent(input, context);\n  return message;\n};\n\nvar deserializeAws_restJson1AccessDeniedException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1AccessDeniedExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1AudioResponseEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1AudioResponseEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadGatewayException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1BadGatewayExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ConflictExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1DependencyFailedException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1DependencyFailedExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1HeartbeatEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1HeartbeatEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1IntentResultEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1IntentResultEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalServerException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1InternalServerExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1PlaybackInterruptionEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1PlaybackInterruptionEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ResourceNotFoundException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ResourceNotFoundExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TextResponseEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1TextResponseEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ThrottlingException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ThrottlingExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1TranscriptEvent_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data;\n    return __generator(this, function (_a) {\n      switch (_a.label) {\n        case 0:\n          contents = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          data = _a.sent();\n          contents = __assign(__assign({}, contents), deserializeAws_restJson1TranscriptEvent(data, context));\n          return [2, contents];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1ValidationException_event = function (output, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var parsedOutput, _a;\n\n    var _b;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = [__assign({}, output)];\n          _b = {};\n          return [4, parseBody(output.body, context)];\n\n        case 1:\n          parsedOutput = __assign.apply(void 0, _a.concat([(_b.body = _c.sent(), _b)]));\n          return [2, deserializeAws_restJson1ValidationExceptionResponse(parsedOutput, context)];\n      }\n    });\n  });\n};\n\nvar deserializeAws_restJson1AccessDeniedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new AccessDeniedException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1BadGatewayExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new BadGatewayException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ConflictExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new ConflictException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1DependencyFailedExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new DependencyFailedException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1InternalServerExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new InternalServerException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ResourceNotFoundExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new ResourceNotFoundException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ThrottlingExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new ThrottlingException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar deserializeAws_restJson1ValidationExceptionResponse = function (parsedOutput, context) {\n  return __awaiter(void 0, void 0, void 0, function () {\n    var contents, data, exception;\n    return __generator(this, function (_a) {\n      contents = {};\n      data = parsedOutput.body;\n\n      if (data.message !== undefined && data.message !== null) {\n        contents.message = __expectString(data.message);\n      }\n\n      exception = new ValidationException(__assign({\n        $metadata: deserializeMetadata(parsedOutput)\n      }, contents));\n      return [2, __decorateServiceException(exception, parsedOutput.body)];\n    });\n  });\n};\n\nvar serializeAws_restJson1ActiveContext = function (input, context) {\n  return __assign(__assign(__assign({}, input.contextAttributes !== undefined && input.contextAttributes !== null && {\n    contextAttributes: serializeAws_restJson1ActiveContextParametersMap(input.contextAttributes, context)\n  }), input.name !== undefined && input.name !== null && {\n    name: input.name\n  }), input.timeToLive !== undefined && input.timeToLive !== null && {\n    timeToLive: serializeAws_restJson1ActiveContextTimeToLive(input.timeToLive, context)\n  });\n};\n\nvar serializeAws_restJson1ActiveContextParametersMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1ActiveContextsList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1ActiveContext(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ActiveContextTimeToLive = function (input, context) {\n  return __assign(__assign({}, input.timeToLiveInSeconds !== undefined && input.timeToLiveInSeconds !== null && {\n    timeToLiveInSeconds: input.timeToLiveInSeconds\n  }), input.turnsToLive !== undefined && input.turnsToLive !== null && {\n    turnsToLive: input.turnsToLive\n  });\n};\n\nvar serializeAws_restJson1AudioInputEvent = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.audioChunk !== undefined && input.audioChunk !== null && {\n    audioChunk: context.base64Encoder(input.audioChunk)\n  }), input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.contentType !== undefined && input.contentType !== null && {\n    contentType: input.contentType\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  });\n};\n\nvar serializeAws_restJson1Button = function (input, context) {\n  return __assign(__assign({}, input.text !== undefined && input.text !== null && {\n    text: input.text\n  }), input.value !== undefined && input.value !== null && {\n    value: input.value\n  });\n};\n\nvar serializeAws_restJson1ButtonsList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Button(entry, context);\n  });\n};\n\nvar serializeAws_restJson1ConfigurationEvent = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.disablePlayback !== undefined && input.disablePlayback !== null && {\n    disablePlayback: input.disablePlayback\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  }), input.requestAttributes !== undefined && input.requestAttributes !== null && {\n    requestAttributes: serializeAws_restJson1StringMap(input.requestAttributes, context)\n  }), input.responseContentType !== undefined && input.responseContentType !== null && {\n    responseContentType: input.responseContentType\n  }), input.sessionState !== undefined && input.sessionState !== null && {\n    sessionState: serializeAws_restJson1SessionState(input.sessionState, context)\n  }), input.welcomeMessages !== undefined && input.welcomeMessages !== null && {\n    welcomeMessages: serializeAws_restJson1Messages(input.welcomeMessages, context)\n  });\n};\n\nvar serializeAws_restJson1DialogAction = function (input, context) {\n  return __assign(__assign(__assign({}, input.slotElicitationStyle !== undefined && input.slotElicitationStyle !== null && {\n    slotElicitationStyle: input.slotElicitationStyle\n  }), input.slotToElicit !== undefined && input.slotToElicit !== null && {\n    slotToElicit: input.slotToElicit\n  }), input.type !== undefined && input.type !== null && {\n    type: input.type\n  });\n};\n\nvar serializeAws_restJson1DisconnectionEvent = function (input, context) {\n  return __assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  });\n};\n\nvar serializeAws_restJson1DTMFInputEvent = function (input, context) {\n  return __assign(__assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  }), input.inputCharacter !== undefined && input.inputCharacter !== null && {\n    inputCharacter: input.inputCharacter\n  });\n};\n\nvar serializeAws_restJson1ImageResponseCard = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.buttons !== undefined && input.buttons !== null && {\n    buttons: serializeAws_restJson1ButtonsList(input.buttons, context)\n  }), input.imageUrl !== undefined && input.imageUrl !== null && {\n    imageUrl: input.imageUrl\n  }), input.subtitle !== undefined && input.subtitle !== null && {\n    subtitle: input.subtitle\n  }), input.title !== undefined && input.title !== null && {\n    title: input.title\n  });\n};\n\nvar serializeAws_restJson1Intent = function (input, context) {\n  return __assign(__assign(__assign(__assign({}, input.confirmationState !== undefined && input.confirmationState !== null && {\n    confirmationState: input.confirmationState\n  }), input.name !== undefined && input.name !== null && {\n    name: input.name\n  }), input.slots !== undefined && input.slots !== null && {\n    slots: serializeAws_restJson1Slots(input.slots, context)\n  }), input.state !== undefined && input.state !== null && {\n    state: input.state\n  });\n};\n\nvar serializeAws_restJson1Message = function (input, context) {\n  return __assign(__assign(__assign({}, input.content !== undefined && input.content !== null && {\n    content: input.content\n  }), input.contentType !== undefined && input.contentType !== null && {\n    contentType: input.contentType\n  }), input.imageResponseCard !== undefined && input.imageResponseCard !== null && {\n    imageResponseCard: serializeAws_restJson1ImageResponseCard(input.imageResponseCard, context)\n  });\n};\n\nvar serializeAws_restJson1Messages = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Message(entry, context);\n  });\n};\n\nvar serializeAws_restJson1PlaybackCompletionEvent = function (input, context) {\n  return __assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  });\n};\n\nvar serializeAws_restJson1RuntimeHintDetails = function (input, context) {\n  return __assign({}, input.runtimeHintValues !== undefined && input.runtimeHintValues !== null && {\n    runtimeHintValues: serializeAws_restJson1RuntimeHintValuesList(input.runtimeHintValues, context)\n  });\n};\n\nvar serializeAws_restJson1RuntimeHints = function (input, context) {\n  return __assign({}, input.slotHints !== undefined && input.slotHints !== null && {\n    slotHints: serializeAws_restJson1SlotHintsIntentMap(input.slotHints, context)\n  });\n};\n\nvar serializeAws_restJson1RuntimeHintValue = function (input, context) {\n  return __assign({}, input.phrase !== undefined && input.phrase !== null && {\n    phrase: input.phrase\n  });\n};\n\nvar serializeAws_restJson1RuntimeHintValuesList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1RuntimeHintValue(entry, context);\n  });\n};\n\nvar serializeAws_restJson1SessionState = function (input, context) {\n  return __assign(__assign(__assign(__assign(__assign(__assign({}, input.activeContexts !== undefined && input.activeContexts !== null && {\n    activeContexts: serializeAws_restJson1ActiveContextsList(input.activeContexts, context)\n  }), input.dialogAction !== undefined && input.dialogAction !== null && {\n    dialogAction: serializeAws_restJson1DialogAction(input.dialogAction, context)\n  }), input.intent !== undefined && input.intent !== null && {\n    intent: serializeAws_restJson1Intent(input.intent, context)\n  }), input.originatingRequestId !== undefined && input.originatingRequestId !== null && {\n    originatingRequestId: input.originatingRequestId\n  }), input.runtimeHints !== undefined && input.runtimeHints !== null && {\n    runtimeHints: serializeAws_restJson1RuntimeHints(input.runtimeHints, context)\n  }), input.sessionAttributes !== undefined && input.sessionAttributes !== null && {\n    sessionAttributes: serializeAws_restJson1StringMap(input.sessionAttributes, context)\n  });\n};\n\nvar serializeAws_restJson1Slot = function (input, context) {\n  return __assign(__assign(__assign({}, input.shape !== undefined && input.shape !== null && {\n    shape: input.shape\n  }), input.value !== undefined && input.value !== null && {\n    value: serializeAws_restJson1Value(input.value, context)\n  }), input.values !== undefined && input.values !== null && {\n    values: serializeAws_restJson1Values(input.values, context)\n  });\n};\n\nvar serializeAws_restJson1SlotHintsIntentMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1SlotHintsSlotMap(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1SlotHintsSlotMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1RuntimeHintDetails(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1Slots = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = serializeAws_restJson1Slot(value, context), _b));\n  }, {});\n};\n\nvar serializeAws_restJson1StartConversationRequestEventStream = function (input, context) {\n  return StartConversationRequestEventStream.visit(input, {\n    AudioInputEvent: function (value) {\n      return {\n        AudioInputEvent: serializeAws_restJson1AudioInputEvent(value, context)\n      };\n    },\n    ConfigurationEvent: function (value) {\n      return {\n        ConfigurationEvent: serializeAws_restJson1ConfigurationEvent(value, context)\n      };\n    },\n    DTMFInputEvent: function (value) {\n      return {\n        DTMFInputEvent: serializeAws_restJson1DTMFInputEvent(value, context)\n      };\n    },\n    DisconnectionEvent: function (value) {\n      return {\n        DisconnectionEvent: serializeAws_restJson1DisconnectionEvent(value, context)\n      };\n    },\n    PlaybackCompletionEvent: function (value) {\n      return {\n        PlaybackCompletionEvent: serializeAws_restJson1PlaybackCompletionEvent(value, context)\n      };\n    },\n    TextInputEvent: function (value) {\n      return {\n        TextInputEvent: serializeAws_restJson1TextInputEvent(value, context)\n      };\n    },\n    _: function (name, value) {\n      return {\n        name: value\n      };\n    }\n  });\n};\n\nvar serializeAws_restJson1StringList = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return entry;\n  });\n};\n\nvar serializeAws_restJson1StringMap = function (input, context) {\n  return Object.entries(input).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = value, _b));\n  }, {});\n};\n\nvar serializeAws_restJson1TextInputEvent = function (input, context) {\n  return __assign(__assign(__assign({}, input.clientTimestampMillis !== undefined && input.clientTimestampMillis !== null && {\n    clientTimestampMillis: input.clientTimestampMillis\n  }), input.eventId !== undefined && input.eventId !== null && {\n    eventId: input.eventId\n  }), input.text !== undefined && input.text !== null && {\n    text: input.text\n  });\n};\n\nvar serializeAws_restJson1Value = function (input, context) {\n  return __assign(__assign(__assign({}, input.interpretedValue !== undefined && input.interpretedValue !== null && {\n    interpretedValue: input.interpretedValue\n  }), input.originalValue !== undefined && input.originalValue !== null && {\n    originalValue: input.originalValue\n  }), input.resolvedValues !== undefined && input.resolvedValues !== null && {\n    resolvedValues: serializeAws_restJson1StringList(input.resolvedValues, context)\n  });\n};\n\nvar serializeAws_restJson1Values = function (input, context) {\n  return input.filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return serializeAws_restJson1Slot(entry, context);\n  });\n};\n\nvar deserializeAws_restJson1AccessDeniedException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1ActiveContext = function (output, context) {\n  return {\n    contextAttributes: output.contextAttributes !== undefined && output.contextAttributes !== null ? deserializeAws_restJson1ActiveContextParametersMap(output.contextAttributes, context) : undefined,\n    name: __expectString(output.name),\n    timeToLive: output.timeToLive !== undefined && output.timeToLive !== null ? deserializeAws_restJson1ActiveContextTimeToLive(output.timeToLive, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ActiveContextParametersMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1ActiveContextsList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1ActiveContext(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1ActiveContextTimeToLive = function (output, context) {\n  return {\n    timeToLiveInSeconds: __expectInt32(output.timeToLiveInSeconds),\n    turnsToLive: __expectInt32(output.turnsToLive)\n  };\n};\n\nvar deserializeAws_restJson1AudioResponseEvent = function (output, context) {\n  return {\n    audioChunk: output.audioChunk !== undefined && output.audioChunk !== null ? context.base64Decoder(output.audioChunk) : undefined,\n    contentType: __expectString(output.contentType),\n    eventId: __expectString(output.eventId)\n  };\n};\n\nvar deserializeAws_restJson1BadGatewayException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1Button = function (output, context) {\n  return {\n    text: __expectString(output.text),\n    value: __expectString(output.value)\n  };\n};\n\nvar deserializeAws_restJson1ButtonsList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Button(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1ConfidenceScore = function (output, context) {\n  return {\n    score: __limitedParseDouble(output.score)\n  };\n};\n\nvar deserializeAws_restJson1ConflictException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1DependencyFailedException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1DialogAction = function (output, context) {\n  return {\n    slotElicitationStyle: __expectString(output.slotElicitationStyle),\n    slotToElicit: __expectString(output.slotToElicit),\n    type: __expectString(output.type)\n  };\n};\n\nvar deserializeAws_restJson1HeartbeatEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId)\n  };\n};\n\nvar deserializeAws_restJson1ImageResponseCard = function (output, context) {\n  return {\n    buttons: output.buttons !== undefined && output.buttons !== null ? deserializeAws_restJson1ButtonsList(output.buttons, context) : undefined,\n    imageUrl: __expectString(output.imageUrl),\n    subtitle: __expectString(output.subtitle),\n    title: __expectString(output.title)\n  };\n};\n\nvar deserializeAws_restJson1Intent = function (output, context) {\n  return {\n    confirmationState: __expectString(output.confirmationState),\n    name: __expectString(output.name),\n    slots: output.slots !== undefined && output.slots !== null ? deserializeAws_restJson1Slots(output.slots, context) : undefined,\n    state: __expectString(output.state)\n  };\n};\n\nvar deserializeAws_restJson1IntentResultEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    inputMode: __expectString(output.inputMode),\n    interpretations: output.interpretations !== undefined && output.interpretations !== null ? deserializeAws_restJson1Interpretations(output.interpretations, context) : undefined,\n    requestAttributes: output.requestAttributes !== undefined && output.requestAttributes !== null ? deserializeAws_restJson1StringMap(output.requestAttributes, context) : undefined,\n    sessionId: __expectString(output.sessionId),\n    sessionState: output.sessionState !== undefined && output.sessionState !== null ? deserializeAws_restJson1SessionState(output.sessionState, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1InternalServerException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1Interpretation = function (output, context) {\n  return {\n    intent: output.intent !== undefined && output.intent !== null ? deserializeAws_restJson1Intent(output.intent, context) : undefined,\n    nluConfidence: output.nluConfidence !== undefined && output.nluConfidence !== null ? deserializeAws_restJson1ConfidenceScore(output.nluConfidence, context) : undefined,\n    sentimentResponse: output.sentimentResponse !== undefined && output.sentimentResponse !== null ? deserializeAws_restJson1SentimentResponse(output.sentimentResponse, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Interpretations = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Interpretation(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1Message = function (output, context) {\n  return {\n    content: __expectString(output.content),\n    contentType: __expectString(output.contentType),\n    imageResponseCard: output.imageResponseCard !== undefined && output.imageResponseCard !== null ? deserializeAws_restJson1ImageResponseCard(output.imageResponseCard, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Messages = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Message(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1PlaybackInterruptionEvent = function (output, context) {\n  return {\n    causedByEventId: __expectString(output.causedByEventId),\n    eventId: __expectString(output.eventId),\n    eventReason: __expectString(output.eventReason)\n  };\n};\n\nvar deserializeAws_restJson1ResourceNotFoundException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1RuntimeHintDetails = function (output, context) {\n  return {\n    runtimeHintValues: output.runtimeHintValues !== undefined && output.runtimeHintValues !== null ? deserializeAws_restJson1RuntimeHintValuesList(output.runtimeHintValues, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1RuntimeHints = function (output, context) {\n  return {\n    slotHints: output.slotHints !== undefined && output.slotHints !== null ? deserializeAws_restJson1SlotHintsIntentMap(output.slotHints, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1RuntimeHintValue = function (output, context) {\n  return {\n    phrase: __expectString(output.phrase)\n  };\n};\n\nvar deserializeAws_restJson1RuntimeHintValuesList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1RuntimeHintValue(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1SentimentResponse = function (output, context) {\n  return {\n    sentiment: __expectString(output.sentiment),\n    sentimentScore: output.sentimentScore !== undefined && output.sentimentScore !== null ? deserializeAws_restJson1SentimentScore(output.sentimentScore, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SentimentScore = function (output, context) {\n  return {\n    mixed: __limitedParseDouble(output.mixed),\n    negative: __limitedParseDouble(output.negative),\n    neutral: __limitedParseDouble(output.neutral),\n    positive: __limitedParseDouble(output.positive)\n  };\n};\n\nvar deserializeAws_restJson1SessionState = function (output, context) {\n  return {\n    activeContexts: output.activeContexts !== undefined && output.activeContexts !== null ? deserializeAws_restJson1ActiveContextsList(output.activeContexts, context) : undefined,\n    dialogAction: output.dialogAction !== undefined && output.dialogAction !== null ? deserializeAws_restJson1DialogAction(output.dialogAction, context) : undefined,\n    intent: output.intent !== undefined && output.intent !== null ? deserializeAws_restJson1Intent(output.intent, context) : undefined,\n    originatingRequestId: __expectString(output.originatingRequestId),\n    runtimeHints: output.runtimeHints !== undefined && output.runtimeHints !== null ? deserializeAws_restJson1RuntimeHints(output.runtimeHints, context) : undefined,\n    sessionAttributes: output.sessionAttributes !== undefined && output.sessionAttributes !== null ? deserializeAws_restJson1StringMap(output.sessionAttributes, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Slot = function (output, context) {\n  return {\n    shape: __expectString(output.shape),\n    value: output.value !== undefined && output.value !== null ? deserializeAws_restJson1Value(output.value, context) : undefined,\n    values: output.values !== undefined && output.values !== null ? deserializeAws_restJson1Values(output.values, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1SlotHintsIntentMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1SlotHintsSlotMap(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1SlotHintsSlotMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1RuntimeHintDetails(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1Slots = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = deserializeAws_restJson1Slot(value, context), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1StartConversationResponseEventStream = function (output, context) {\n  if (output.AccessDeniedException !== undefined && output.AccessDeniedException !== null) {\n    return {\n      AccessDeniedException: deserializeAws_restJson1AccessDeniedException(output.AccessDeniedException, context)\n    };\n  }\n\n  if (output.AudioResponseEvent !== undefined && output.AudioResponseEvent !== null) {\n    return {\n      AudioResponseEvent: deserializeAws_restJson1AudioResponseEvent(output.AudioResponseEvent, context)\n    };\n  }\n\n  if (output.BadGatewayException !== undefined && output.BadGatewayException !== null) {\n    return {\n      BadGatewayException: deserializeAws_restJson1BadGatewayException(output.BadGatewayException, context)\n    };\n  }\n\n  if (output.ConflictException !== undefined && output.ConflictException !== null) {\n    return {\n      ConflictException: deserializeAws_restJson1ConflictException(output.ConflictException, context)\n    };\n  }\n\n  if (output.DependencyFailedException !== undefined && output.DependencyFailedException !== null) {\n    return {\n      DependencyFailedException: deserializeAws_restJson1DependencyFailedException(output.DependencyFailedException, context)\n    };\n  }\n\n  if (output.HeartbeatEvent !== undefined && output.HeartbeatEvent !== null) {\n    return {\n      HeartbeatEvent: deserializeAws_restJson1HeartbeatEvent(output.HeartbeatEvent, context)\n    };\n  }\n\n  if (output.IntentResultEvent !== undefined && output.IntentResultEvent !== null) {\n    return {\n      IntentResultEvent: deserializeAws_restJson1IntentResultEvent(output.IntentResultEvent, context)\n    };\n  }\n\n  if (output.InternalServerException !== undefined && output.InternalServerException !== null) {\n    return {\n      InternalServerException: deserializeAws_restJson1InternalServerException(output.InternalServerException, context)\n    };\n  }\n\n  if (output.PlaybackInterruptionEvent !== undefined && output.PlaybackInterruptionEvent !== null) {\n    return {\n      PlaybackInterruptionEvent: deserializeAws_restJson1PlaybackInterruptionEvent(output.PlaybackInterruptionEvent, context)\n    };\n  }\n\n  if (output.ResourceNotFoundException !== undefined && output.ResourceNotFoundException !== null) {\n    return {\n      ResourceNotFoundException: deserializeAws_restJson1ResourceNotFoundException(output.ResourceNotFoundException, context)\n    };\n  }\n\n  if (output.TextResponseEvent !== undefined && output.TextResponseEvent !== null) {\n    return {\n      TextResponseEvent: deserializeAws_restJson1TextResponseEvent(output.TextResponseEvent, context)\n    };\n  }\n\n  if (output.ThrottlingException !== undefined && output.ThrottlingException !== null) {\n    return {\n      ThrottlingException: deserializeAws_restJson1ThrottlingException(output.ThrottlingException, context)\n    };\n  }\n\n  if (output.TranscriptEvent !== undefined && output.TranscriptEvent !== null) {\n    return {\n      TranscriptEvent: deserializeAws_restJson1TranscriptEvent(output.TranscriptEvent, context)\n    };\n  }\n\n  if (output.ValidationException !== undefined && output.ValidationException !== null) {\n    return {\n      ValidationException: deserializeAws_restJson1ValidationException(output.ValidationException, context)\n    };\n  }\n\n  return {\n    $unknown: Object.entries(output)[0]\n  };\n};\n\nvar deserializeAws_restJson1StringList = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return __expectString(entry);\n  });\n  return retVal;\n};\n\nvar deserializeAws_restJson1StringMap = function (output, context) {\n  return Object.entries(output).reduce(function (acc, _a) {\n    var _b;\n\n    var _c = __read(_a, 2),\n        key = _c[0],\n        value = _c[1];\n\n    if (value === null) {\n      return acc;\n    }\n\n    return __assign(__assign({}, acc), (_b = {}, _b[key] = __expectString(value), _b));\n  }, {});\n};\n\nvar deserializeAws_restJson1TextResponseEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    messages: output.messages !== undefined && output.messages !== null ? deserializeAws_restJson1Messages(output.messages, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1ThrottlingException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1TranscriptEvent = function (output, context) {\n  return {\n    eventId: __expectString(output.eventId),\n    transcript: __expectString(output.transcript)\n  };\n};\n\nvar deserializeAws_restJson1ValidationException = function (output, context) {\n  return {\n    message: __expectString(output.message)\n  };\n};\n\nvar deserializeAws_restJson1Value = function (output, context) {\n  return {\n    interpretedValue: __expectString(output.interpretedValue),\n    originalValue: __expectString(output.originalValue),\n    resolvedValues: output.resolvedValues !== undefined && output.resolvedValues !== null ? deserializeAws_restJson1StringList(output.resolvedValues, context) : undefined\n  };\n};\n\nvar deserializeAws_restJson1Values = function (output, context) {\n  var retVal = (output || []).filter(function (e) {\n    return e != null;\n  }).map(function (entry) {\n    if (entry === null) {\n      return null;\n    }\n\n    return deserializeAws_restJson1Slot(entry, context);\n  });\n  return retVal;\n};\n\nvar deserializeMetadata = function (output) {\n  var _a;\n\n  return {\n    httpStatusCode: output.statusCode,\n    requestId: (_a = output.headers[\"x-amzn-requestid\"]) !== null && _a !== void 0 ? _a : output.headers[\"x-amzn-request-id\"],\n    extendedRequestId: output.headers[\"x-amz-id-2\"],\n    cfId: output.headers[\"x-amz-cf-id\"]\n  };\n};\n\nvar collectBody = function (streamBody, context) {\n  if (streamBody === void 0) {\n    streamBody = new Uint8Array();\n  }\n\n  if (streamBody instanceof Uint8Array) {\n    return Promise.resolve(streamBody);\n  }\n\n  return context.streamCollector(streamBody) || Promise.resolve(new Uint8Array());\n};\n\nvar collectBodyString = function (streamBody, context) {\n  return collectBody(streamBody, context).then(function (body) {\n    return context.utf8Encoder(body);\n  });\n};\n\nvar isSerializableHeaderValue = function (value) {\n  return value !== undefined && value !== null && value !== \"\" && (!Object.getOwnPropertyNames(value).includes(\"length\") || value.length != 0) && (!Object.getOwnPropertyNames(value).includes(\"size\") || value.size != 0);\n};\n\nvar parseBody = function (streamBody, context) {\n  return collectBodyString(streamBody, context).then(function (encoded) {\n    if (encoded.length) {\n      return JSON.parse(encoded);\n    }\n\n    return {};\n  });\n};\n\nvar loadRestJsonErrorCode = function (output, data) {\n  var findKey = function (object, key) {\n    return Object.keys(object).find(function (k) {\n      return k.toLowerCase() === key.toLowerCase();\n    });\n  };\n\n  var sanitizeErrorCode = function (rawValue) {\n    var cleanValue = rawValue;\n\n    if (cleanValue.indexOf(\":\") >= 0) {\n      cleanValue = cleanValue.split(\":\")[0];\n    }\n\n    if (cleanValue.indexOf(\"#\") >= 0) {\n      cleanValue = cleanValue.split(\"#\")[1];\n    }\n\n    return cleanValue;\n  };\n\n  var headerKey = findKey(output.headers, \"x-amzn-errortype\");\n\n  if (headerKey !== undefined) {\n    return sanitizeErrorCode(output.headers[headerKey]);\n  }\n\n  if (data.code !== undefined) {\n    return sanitizeErrorCode(data.code);\n  }\n\n  if (data[\"__type\"] !== undefined) {\n    return sanitizeErrorCode(data[\"__type\"]);\n  }\n\n  return \"\";\n};","map":null,"metadata":{},"sourceType":"module"}