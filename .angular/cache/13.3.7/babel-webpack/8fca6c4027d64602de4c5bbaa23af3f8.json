{"ast":null,"code":"import _asyncToGenerator from \"/Users/daelin/Documents/GitHub/AWSFAQChatBot/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as AWS from \"@aws-sdk/client-lex-runtime-v2\";\nimport { AWSConfig, BOT_ID, BOT_ALIAS_ID, LOCALE_ID, INIT_INTENT } from 'src/aws-exports';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\n\nfunction AppComponent_p_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"p\", 5);\n  }\n\n  if (rf & 2) {\n    const message_r1 = ctx.$implicit;\n    i0.ɵɵclassMap(message_r1.user);\n    i0.ɵɵproperty(\"innerHTML\", message_r1.message, i0.ɵɵsanitizeHtml);\n  }\n}\n\nconst client = new AWS.LexRuntimeV2(AWSConfig);\nconst SESSION = \"session\" + Date.now();\nexport let AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    constructor(http) {\n      this.http = http;\n      this.title = \"Takealot FAQ Bot\";\n      this.responseR = [];\n\n      this.getResponse = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* (input) {\n          const params = {\n            botId: BOT_ID,\n            botAliasId: BOT_ALIAS_ID,\n            localeId: LOCALE_ID,\n            sessionId: SESSION,\n            text: input\n          };\n\n          try {\n            const resp = yield client.recognizeText(params);\n            return resp.messages[0].content;\n          } catch (error) {\n            console.log(error);\n            return \"I'm not too sure what you mean. Please try again\";\n          }\n        });\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n\n    createSession() {\n      client.putSession({\n        sessionId: SESSION,\n        botId: BOT_ID,\n        botAliasId: BOT_ALIAS_ID,\n        localeId: LOCALE_ID,\n        sessionState: {\n          intent: {\n            name: INIT_INTENT\n          }\n        }\n      });\n    }\n\n    showMessage(message, user) {\n      let tmpMessage = message.split(\" \");\n      tmpMessage.forEach(word => {\n        if (word.startsWith(\"http\")) {\n          message = message.replace(word, \"<a href=\\\"\" + word + \"\\\" target=\\\"_blank\\\">\" + word + \"</a>\");\n        }\n\n        if (word.includes(\"@\")) {\n          message = message.replace(word, \"<a href=\\\"mailto:\" + word + \"\\\">\" + word + \"</a>\");\n        }\n      });\n\n      if (message.includes(\"http://stuffs.co.za/hsjfyt\")) {\n        message = message + \"<br /><img src=\\\"https://media.takealot.com/covers_images/0e30bcf4ede54ccfb31afb6717dcc650/s-pdpxl.file\\\" width=\\\"100%\\\" />\";\n      }\n\n      this.responseR.push({\n        message: message,\n        user: user\n      });\n      document.getElementById(\"messagesSpot\").scrollTop = document.getElementById(\"messagesSpot\").scrollHeight;\n    }\n\n    input(e) {\n      e.preventDefault();\n      let input = document.getElementById(\"input\");\n      this.showMessage(input.value, \"from-me\");\n      this.showMessage(\"...\", \"from-them\");\n      this.getResponse(input.value).then(resp => {\n        this.responseR.pop();\n\n        if (resp == \"Okay, have a great day! :)\") {\n          this.showMessage(resp, \"from-them\");\n          this.showMessage(\"This chat has ended\", \"info\");\n        } else {\n          this.showMessage(resp, \"from-them\");\n        }\n      });\n      input.value = \"\";\n    }\n\n  }\n\n  AppComponent.ɵfac = function AppComponent_Factory(t) {\n    return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  AppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AppComponent,\n    selectors: [[\"app-root\"]],\n    decls: 10,\n    vars: 3,\n    consts: [[\"id\", \"messagesSpot\", 1, \"imessage\"], [3, \"class\", \"innerHTML\", 4, \"ngFor\", \"ngForOf\"], [3, \"submit\"], [\"type\", \"text\", \"id\", \"input\", \"placeholder\", \"Type here...\"], [\"type\", \"submit\", \"id\", \"submit\"], [3, \"innerHTML\"]],\n    template: function AppComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h1\");\n        i0.ɵɵtext(1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(2, \"div\", 0);\n        i0.ɵɵtemplate(3, AppComponent_p_3_Template, 1, 4, \"p\", 1);\n        i0.ɵɵelementStart(4, \"form\", 2);\n        i0.ɵɵlistener(\"submit\", function AppComponent_Template_form_submit_4_listener($event) {\n          return ctx.input($event);\n        });\n        i0.ɵɵelement(5, \"input\", 3);\n        i0.ɵɵelementStart(6, \"button\", 4);\n        i0.ɵɵtext(7, \"Send\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(8, \"h2\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.responseR);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(ctx.responseR);\n      }\n    },\n    directives: [i2.NgForOf],\n    styles: [\"*[_ngcontent-%COMP%]{Font-Family:\\\"Helvetica\\\"}ngx-dropzone[_ngcontent-%COMP%], ngx-dropzone-image-preview[_ngcontent-%COMP%], ngx-dropzone-label[_ngcontent-%COMP%]{width:100%!important;max-width:100%!important}ngx-dropzone[_ngcontent-%COMP%]{height:80vh!important;max-height:80vh!important}ngx-dropzone-image-preview[_ngcontent-%COMP%]{height:70vh!important;max-height:70vh!important}h1[_ngcontent-%COMP%], h2[_ngcontent-%COMP%]{text-align:center}.imessage[_ngcontent-%COMP%]{background-color:#fff;border:1px solid #e5e5ea;border-radius:.25rem;display:flex;flex-direction:column;font-family:SanFrancisco;font-size:1.25rem;margin:0 auto 1rem;max-width:600px;padding:.5rem 1.5rem}.imessage[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]{border-radius:1.15rem;line-height:1.25;max-width:75%;padding:.5rem .875rem;position:relative;word-wrap:break-word}.imessage[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:before, .imessage[_ngcontent-%COMP%]   p[_ngcontent-%COMP%]:after{bottom:-.1rem;content:\\\"\\\";height:1rem;position:absolute}p.from-me[_ngcontent-%COMP%]{align-self:flex-end;background-color:#248bf5;color:#fff}p.from-me[_ngcontent-%COMP%]:before{border-bottom-left-radius:.8rem .7rem;border-right:1rem solid #248bf5;right:-.35rem;transform:translateY(-.1rem)}p.from-me[_ngcontent-%COMP%]:after{background-color:#fff;border-bottom-left-radius:.5rem;right:-40px;transform:translate(-30px,-2px);width:10px}p[class^=from-][_ngcontent-%COMP%]{margin:.5rem 0;width:-moz-fit-content;width:fit-content}p.from-me[_ngcontent-%COMP%] ~ p.from-me[_ngcontent-%COMP%]{margin:.25rem 0 0}p.from-me[_ngcontent-%COMP%] ~ p.from-me[_ngcontent-%COMP%]:not(:last-child){margin:.25rem 0 0}p.from-me[_ngcontent-%COMP%] ~ p.from-me[_ngcontent-%COMP%]:last-child{margin-bottom:.5rem}p.from-them[_ngcontent-%COMP%]{align-items:flex-start;background-color:#e5e5ea;color:#000}p.from-them[_ngcontent-%COMP%]:before{border-bottom-right-radius:.8rem .7rem;border-left:1rem solid #e5e5ea;left:-.35rem;transform:translateY(-.1rem)}p.from-them[_ngcontent-%COMP%]:after{background-color:#fff;border-bottom-right-radius:.5rem;left:20px;transform:translate(-30px,-2px);width:10px}p[class^=from-].emoji[_ngcontent-%COMP%]{background:none;font-size:2.5rem}p[class^=from-].emoji[_ngcontent-%COMP%]:before{content:none}.no-tail[_ngcontent-%COMP%]:before{display:none}.margin-b_none[_ngcontent-%COMP%]{margin-bottom:0!important}.margin-b_one[_ngcontent-%COMP%]{margin-bottom:1rem!important}.margin-t_one[_ngcontent-%COMP%]{margin-top:1rem!important}@font-face{font-family:SanFrancisco;src:url(https://cdn.rawgit.com/AllThingsSmitty/fonts/25983b71/SanFrancisco/sanfranciscodisplay-regular-webfont.woff2) format(\\\"woff2\\\"),url(https://cdn.rawgit.com/AllThingsSmitty/fonts/25983b71/SanFrancisco/sanfranciscodisplay-regular-webfont.woff) format(\\\"woff\\\")}.imessage[_ngcontent-%COMP%]{height:80vh;position:relative;max-height:80vh;overflow-y:scroll}.imessage[_ngcontent-%COMP%]   form[_ngcontent-%COMP%]{width:650px;position:fixed;bottom:2%;left:50%;margin-left:-325px}@media screen and (max-width: 800px){body[_ngcontent-%COMP%]{margin:0 .5rem}.container[_ngcontent-%COMP%]{padding:.5rem}.imessage[_ngcontent-%COMP%]{font-size:1.05rem;margin:0 auto 1rem;max-width:600px;padding:.25rem .875rem}.imessage[_ngcontent-%COMP%]   p.from-them[_ngcontent-%COMP%], .message[_ngcontent-%COMP%]   p.from-me[_ngcontent-%COMP%]{margin:.5rem 0}}form[_ngcontent-%COMP%]{width:90%}form[_ngcontent-%COMP%]   input[type=text][_ngcontent-%COMP%]{width:100%;font-size:24px;border-radius:5px;border:solid 1px black;padding:5px}form[_ngcontent-%COMP%]   button[type=submit][_ngcontent-%COMP%]{display:none}p.info[_ngcontent-%COMP%]{width:100%!important;text-align:center;color:gray;font-style:italic}\"]\n  });\n  return AppComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}