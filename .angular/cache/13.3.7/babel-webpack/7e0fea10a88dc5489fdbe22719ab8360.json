{"ast":null,"code":"import { __extends } from \"tslib\";\n\nvar ProviderError = function (_super) {\n  __extends(ProviderError, _super);\n\n  function ProviderError(message, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.tryNextLink = tryNextLink;\n    _this.name = \"ProviderError\";\n    Object.setPrototypeOf(_this, ProviderError.prototype);\n    return _this;\n  }\n\n  ProviderError.from = function (error, tryNextLink) {\n    if (tryNextLink === void 0) {\n      tryNextLink = true;\n    }\n\n    return Object.assign(new this(error.message, tryNextLink), error);\n  };\n\n  return ProviderError;\n}(Error);\n\nexport { ProviderError };","map":null,"metadata":{},"sourceType":"module"}